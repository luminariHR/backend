name: 개발 API 배포

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

#    services:
#      docker:
#        image: docker:19.03.12
#        options: --privileged
#        ports:
#          - 80:80

    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-

      - name: Create .env file
        run: |
          {
              echo 'SECRET_KEY = "${{ secrets.DEV_DJANGO_SECRET_KEY }}"'
              echo 'ALLOWED_HOSTS = "${{ secrets.DEV_DJANGO_ALLOWED_HOSTS }}"'
              echo 'DEBUG = "${{ secrets.DEV_DJANGO_DEBUG }}"'
              echo 'CSRF_TRUSTED_ORIGINS = "${{ secrets.DEV_DJANGO_CSRF_TRUSTED_ORIGINS }}"'
              echo 'DB_NAME = "${{ secrets.DEV_DJANGO_DB_NAME }}"'
              echo 'DB_USER = "${{ secrets.DEV_DJANGO_DB_USER }}"'
              echo 'DB_PASSWORD = "${{ secrets.DEV_DJANGO_DB_PASSWORD }}"'
              echo 'DB_HOST = "${{ secrets.DEV_DJANGO_DB_HOST }}"'
              echo 'DB_PORT = "${{ secrets.DEV_DJANGO_DB_PORT }}"'
              echo 'NAVER_OCR_SECRET_KEY = "${{ secrets.DEV_NAVER_OCR_SECRET_KEY }}"'
              echo 'OPENAI_API_KEY = "${{ secrets.DEV_OPENAI_API_KEY }}"'
              echo 'SUPABASE_URL = "${{ secrets.DEV_SUPABASE_URL }}"'
              echo 'SUPABASE_KEY = "${{ secrets.DEV_SUPABASE_KEY }}"'
              echo 'EMAIL_HOST_USER = "${{ secrets.DEV_EMAIL_HOST_USER }}"'
              echo 'EMAIL_HOST_PASSWORD = "${{ secrets.DEV_EMAIL_HOST_PASSWORD }}"'
          } > .env.dev

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEV_SSH_KEY }}
          SSH_HOST: ${{ secrets.DEV_SSH_HOST }}
          SSH_USERNAME: ${{ secrets.DEV_SSH_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.DEV_SSH_HOST }} >> ~/.ssh/known_hosts
          scp .env.dev ${{ secrets.DEV_SSH_USERNAME }}@${{ secrets.DEV_SSH_HOST }}:/home/dev/backend
          ssh ${{ secrets.DEV_SSH_USERNAME }}@${{ secrets.DEV_SSH_HOST }} "
                      git clone git@github.com:luminariHR/backend.git /home/dev/test &&
                      cd /home/dev/backend &&
                      sudo git config --global --add safe.directory /home/dev/backend &&
                      git checkout main &&
                      git pull &&
                      sudo docker compose -f docker-compose.yml down &&
                      sudo docker compose -f docker-compose.yml up -d &&
                      sudo docker image prune -f"
