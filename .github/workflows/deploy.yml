name: 개발 API 배포

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 80:80

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create .env file
        run: |
          {
              echo 'SECRET_KEY = "${{ secrets.DEV_DJANGO_SECRET_KEY }}"'
              echo 'ALLOWED_HOSTS = "${{ secrets.DEV_DJANGO_ALLOWED_HOSTS }}"'
              echo 'DEBUG = "${{ secrets.DEV_DJANGO_DEBUG }}"'
              echo 'CSRF_TRUSTED_ORIGINS = "${{ secrets.DEV_DJANGO_CSRF_TRUSTED_ORIGINS }}"'
          } > .env.dev

      - name: Build and push Docker images
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
        run: |
          docker-compose -f docker-compose.yml build
          docker save luminari_nginx:latest -o luminari_nginx.tar
          docker save luminari_web:latest -o luminari_web.tar
          docker save luminari_certbot:latest -o luminari_certbot.tar

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEV_SSH_KEY }}
          SSH_HOST: ${{ secrets.DEV_SSH_HOST }}
          SSH_USERNAME: ${{ secrets.DEV_SSH_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.DEV_SSH_HOST }} >> ~/.ssh/known_hosts
          scp docker-compose.yml luminari_nginx.tar luminari_web.tar luminari_certbot.tar ${{ secrets.DEV_SSH_USERNAME }}@${{ secrets.DEV_SSH_HOST }}:/home/dev/
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "
                      sudo docker load -i /home/dev/luminari_nginx.tar &&
                      sudo docker load -i /home/dev/luminari_web.tar &&
                      sudo docker load -i /home/dev/luminari_certbot.tar &&
                      sudo docker compose -f /home/dev/docker-compose.yml up -d"
